version: '3.7'

services:
postgres:
image: postgres:latest
container_name: postgres
restart: always
environment:
POSTGRES_DB: 
POSTGRES_USER: 
POSTGRES_PASSWORD: 
networks:
- marketing_network
volumes:
- postgres_data:/var/lib/postgresql/data

matomo:
image: matomo:latest
container_name: matomo
restart: always
ports:
- "8080:80"
networks:
- marketing_network

n8n:
image: n8nio/n8n:latest
container_name: n8n
restart: always
ports:
- "5678:5678"
environment:
- N8N_BASIC_AUTH_ACTIVE=true
- N8N_BASIC_AUTH_USER=admin
- N8N_BASIC_AUTH_PASSWORD=password
networks:
- marketing_network

mautic:
image: mautic/mautic:latest
container_name: mautic
restart: always
ports:
- "8090:80"
environment:
- MAUTIC_DB_HOST=postgres
- MAUTIC_DB_NAME=
- MAUTIC_DB_USER=
- MAUTIC_DB_PASSWORD=
networks:
- marketing_network

suitecrm:
image: suitecrm/suitecrm:latest
container_name: suitecrm
restart: always
ports:
- "8081:80"
networks:
- marketing_network

portainer:
image: portainer/portainer-ce:latest
container_name: portainer
restart: always
ports:
- "9000:9000"
volumes:
- /var/run/docker.sock:/var/run/docker.sock
- portainer_data:/data
networks:
- marketing_network

prometheus:
image: prom/prometheus:latest
container_name: prometheus
restart: always
ports:
- "9090:9090"
volumes:
- prometheus_data:/prometheus
networks:
- marketing_network
command:
- '--config.file=/etc/prometheus/prometheus.yml'

grafana:
image: grafana/grafana:latest
container_name: grafana
restart: always
ports:
- "3000:3000"
environment:
- GF_SECURITY_ADMIN_PASSWORD=admin
networks:
- marketing_network
volumes:
- grafana_data:/var/lib/grafana

elk:
image: sebp/elk:latest
container_name: elk
restart: always
ports:
- "5601:5601"
- "9200:9200"
- "5044:5044"
networks:
- marketing_network

custom_bot:
build: ./custom_bot
image: custom_bot
container_name: custom_bot
restart: always
environment:
- OPENAI_API_KEY=
- TELEGRAM_BOT_TOKEN=
networks:
- marketing_network

networks:
marketing_network:

volumes:
postgres_data:
portainer_data:
prometheus_data:
grafana_data:
